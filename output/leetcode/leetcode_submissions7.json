{
    "submissions_dump": [
       {
          "id": 595211895,
          "lang": "java",
          "time": "3 hours, 12 minutes",
          "timestamp": 1638326989,
          "status_display": "Wrong Answer",
          "runtime": "N/A",
          "url": "/submissions/detail/595211895/",
          "is_pending": "Not Pending",
          "title": "Arithmetic Slices",
          "memory": "N/A",
          "code": "/** https://leetcode.com/problems/arithmetic-slices/ */\n//An integer array is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.\n//For example, [1,3,5,7,9], [7,7,7,7], and [3,-1,-5,-9] are arithmetic sequences.\n//Given an integer array nums, return the number of arithmetic subarrays of nums.\n//A subarray is a contiguous subsequence of the array.\n\nclass Solution {\n    public int numberOfArithmeticSlices(int[] nums) {\n        int count = 0;\n        for (int i = 2; i < nums.length; i++) {\n            if (nums[i] - nums[i - 1] == nums[i - 1] - nums[i - 2]) {\n                count++;\n            }\n        }\n        return count;\n    }\n}",
          "compare_result": "011111001100111",
          "title_slug": "arithmetic-slices"
       },
       {
          "id": 595211709,
          "lang": "java",
          "time": "3 hours, 12 minutes",
          "timestamp": 1638326957,
          "status_display": "Compile Error",
          "runtime": "N/A",
          "url": "/submissions/detail/595211709/",
          "is_pending": "Not Pending",
          "title": "Arithmetic Slices",
          "memory": "N/A",
          "code": "/** https://leetcode.com/problems/arithmetic-slices/ */\n//An integer array is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.\n//For example, [1,3,5,7,9], [7,7,7,7], and [3,-1,-5,-9] are arithmetic sequences.\n//Given an integer array nums, return the number of arithmetic subarrays of nums.\n//A subarray is a contiguous subsequence of the array.\n\n\n\nint numberOfArithmeticSlices(int* nums, int numsSize){\n\n}}\n    ",
          "compare_result": null,
          "title_slug": "arithmetic-slices"
       },
       {
          "id": 595211619,
          "lang": "python",
          "time": "3 hours, 13 minutes",
          "timestamp": 1638326944,
          "status_display": "Wrong Answer",
          "runtime": "N/A",
          "url": "/submissions/detail/595211619/",
          "is_pending": "Not Pending",
          "title": "Arithmetic Slices",
          "memory": "N/A",
          "code": "# https://leetcode.com/problems/arithmetic-slices/\n#An integer array is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.\n#For example, [1,3,5,7,9], [7,7,7,7], and [3,-1,-5,-9] are arithmetic sequences.\n#Given an integer array nums, return the number of arithmetic subarrays of nums.\n#A subarray is a contiguous subsequence of the array.\n\nclass Solution(object):\n    def numberOfArithmeticSlices(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        if len(nums) < 3:\n            return 0\n        count = 0\n        for i in range(2, len(nums)):\n            if nums[i] - nums[i - 1] == nums[i - 1] - nums[i - 2]:\n                count += 1\n        return count",
          "compare_result": "011111001100111",
          "title_slug": "arithmetic-slices"
       },
       {
          "id": 595210835,
          "lang": "c",
          "time": "3 hours, 15 minutes",
          "timestamp": 1638326821,
          "status_display": "Wrong Answer",
          "runtime": "N/A",
          "url": "/submissions/detail/595210835/",
          "is_pending": "Not Pending",
          "title": "Arithmetic Slices",
          "memory": "N/A",
          "code": "/** https://leetcode.com/problems/arithmetic-slices/ */\n//An integer array is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.\n//For example, [1,3,5,7,9], [7,7,7,7], and [3,-1,-5,-9] are arithmetic sequences.\n//Given an integer array nums, return the number of arithmetic subarrays of nums.\n//A subarray is a contiguous subsequence of the array.\n\n\n\nint numberOfArithmeticSlices(int* nums, int numsSize){\n    int i, j, k, count = 0;\n    for (i = 0; i < numsSize - 2; i++) {\n        for (j = i + 2; j < numsSize; j++) {\n            if (nums[j] - nums[j - 1] == nums[j - 1] - nums[j - 2]) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n    ",
          "compare_result": "111111110110000",
          "title_slug": "arithmetic-slices"
       },
       {
          "id": 595210578,
          "lang": "java",
          "time": "3 hours, 15 minutes",
          "timestamp": 1638326783,
          "status_display": "Wrong Answer",
          "runtime": "N/A",
          "url": "/submissions/detail/595210578/",
          "is_pending": "Not Pending",
          "title": "Arithmetic Slices II - Subsequence",
          "memory": "N/A",
          "code": "/** https://leetcode.com/problems/arithmetic-slices-ii-subsequence/ */\n//Given an integer array nums, return the number of all the arithmetic subsequences of nums.\n//A sequence of numbers is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.\n//For example, [1, 3, 5, 7, 9], [7, 7, 7, 7], and [3, -1, -5, -9] are arithmetic sequences.\n//For example, [1, 1, 2, 5, 7] is not an arithmetic sequence.\n//A subsequence of an array is a sequence that can be formed by removing some elements (possibly none) of the array.\n//For example, [2,5,10] is a subsequence of [1,2,1,2,4,1,5,10].\n//The test cases are generated so that the answer fits in 32-bit integer.\n\nclass Solution {\n    public int numberOfArithmeticSlices(int[] nums) {\n        int ans = 0;\n        for (int i = 2; i < nums.length; i++) {\n            if (nums[i] - nums[i - 1] == nums[i - 1] - nums[i - 2]) {\n                ans += i - 1;\n            }\n        }\n        return ans;\n    }\n} ",
          "compare_result": "00111100000011001110000000000000000000000000000000000000000000000000000000000000000000000000000000010",
          "title_slug": "arithmetic-slices-ii-subsequence"
       },
       {
          "id": 595210537,
          "lang": "javascript",
          "time": "3 hours, 15 minutes",
          "timestamp": 1638326775,
          "status_display": "Wrong Answer",
          "runtime": "N/A",
          "url": "/submissions/detail/595210537/",
          "is_pending": "Not Pending",
          "title": "Arithmetic Slices II - Subsequence",
          "memory": "N/A",
          "code": "/** https://leetcode.com/problems/arithmetic-slices-ii-subsequence/ */\n//Given an integer array nums, return the number of all the arithmetic subsequences of nums.\n//A sequence of numbers is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.\n//For example, [1, 3, 5, 7, 9], [7, 7, 7, 7], and [3, -1, -5, -9] are arithmetic sequences.\n//For example, [1, 1, 2, 5, 7] is not an arithmetic sequence.\n//A subsequence of an array is a sequence that can be formed by removing some elements (possibly none) of the array.\n//For example, [2,5,10] is a subsequence of [1,2,1,2,4,1,5,10].\n//The test cases are generated so that the answer fits in 32-bit integer.\n\n/**\n * @param {number[]} nums\n * @return {number}\n */\n var numberOfArithmeticSlices = function(nums) {\n         var len = nums.length;\n    if (len < 3) return 0;\n    var dp = new Array(len);\n    for (var i = 0; i < len; i++) {\n        dp[i] = new Array(len);\n        dp[i][i] = 1;\n    }\n    for (var i = len - 2; i >= 0; i--) {\n        for (var j = i + 1; j < len; j++) {\n            if (nums[j] - nums[i] == nums[j + 1] - nums[i + 1]) {\n                dp[i][j] = dp[i + 1][j - 1] + 2;\n            } else {\n                dp[i][j] = dp[i + 1][j];\n            }\n        }\n    }\n    var sum = 0;\n    for (var i = 0; i < len; i++) {\n        sum += dp[0][i];\n    }\n    return sum - len;\n};\n    ",
          "compare_result": "00110000000000111100000000000000000000000000000000000000000000000000000000000000000000000000000000010",
          "title_slug": "arithmetic-slices-ii-subsequence"
       },
       {
          "id": 595210392,
          "lang": "python",
          "time": "3 hours, 16 minutes",
          "timestamp": 1638326752,
          "status_display": "Wrong Answer",
          "runtime": "N/A",
          "url": "/submissions/detail/595210392/",
          "is_pending": "Not Pending",
          "title": "Arithmetic Slices II - Subsequence",
          "memory": "N/A",
          "code": "# https://leetcode.com/problems/arithmetic-slices-ii-subsequence/\n#Given an integer array nums, return the number of all the arithmetic subsequences of nums.\n#A sequence of numbers is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.\n#For example, [1, 3, 5, 7, 9], [7, 7, 7, 7], and [3, -1, -5, -9] are arithmetic sequences.\n#For example, [1, 1, 2, 5, 7] is not an arithmetic sequence.\n#A subsequence of an array is a sequence that can be formed by removing some elements (possibly none) of the array.\n#For example, [2,5,10] is a subsequence of [1,2,1,2,4,1,5,10].\n#The test cases are generated so that the answer fits in 32-bit integer.\n\nclass Solution(object):\n    def numberOfArithmeticSlices(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        n = len(nums)\n        if n < 3:\n            return 0\n        dp = [0] * n\n        for i in range(2, n):\n            if nums[i] - nums[i-1] == nums[i-1] - nums[i-2]:\n                dp[i] = dp[i-1] + 1\n        return sum(dp)",
          "compare_result": "00111100000000111110000000000000000000000000000000000000000000000000000000000000000000000000000000010",
          "title_slug": "arithmetic-slices-ii-subsequence"
       },
       {
          "id": 595210336,
          "lang": "c",
          "time": "3 hours, 16 minutes",
          "timestamp": 1638326745,
          "status_display": "Wrong Answer",
          "runtime": "N/A",
          "url": "/submissions/detail/595210336/",
          "is_pending": "Not Pending",
          "title": "Arithmetic Slices II - Subsequence",
          "memory": "N/A",
          "code": "/** https://leetcode.com/problems/arithmetic-slices-ii-subsequence/ */\n//Given an integer array nums, return the number of all the arithmetic subsequences of nums.\n//A sequence of numbers is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.\n//For example, [1, 3, 5, 7, 9], [7, 7, 7, 7], and [3, -1, -5, -9] are arithmetic sequences.\n//For example, [1, 1, 2, 5, 7] is not an arithmetic sequence.\n//A subsequence of an array is a sequence that can be formed by removing some elements (possibly none) of the array.\n//For example, [2,5,10] is a subsequence of [1,2,1,2,4,1,5,10].\n//The test cases are generated so that the answer fits in 32-bit integer.\n\n\n\nint numberOfArithmeticSlices(int* nums, int numsSize){\n    int i, j, k;\n    int count = 0;\n    for(i = 0; i < numsSize - 2; i++){\n        for(j = i + 1; j < numsSize - 1; j++){\n            for(k = j + 1; k < numsSize; k++){\n                if(nums[j] - nums[i] == nums[k] - nums[j]){\n                    count++;\n                }\n            }\n        }\n    }\n    return count;\n}\n    ",
          "compare_result": "00111000000011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
          "title_slug": "arithmetic-slices-ii-subsequence"
       },
       {
          "id": 594688682,
          "lang": "python",
          "time": "1 day, 4 hours",
          "timestamp": 1638236182,
          "status_display": "Accepted",
          "runtime": "3576 ms",
          "url": "/submissions/detail/594688682/",
          "is_pending": "Not Pending",
          "title": "Two Sum",
          "memory": "14.5 MB",
          "code": "class Solution(object):\n    def twoSum(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: List[int]\n        \"\"\"\n        for i in range(len(nums)):\n            for j in range(i+1, len(nums)):\n                if nums[i] + nums[j] == target:\n                    return [i, j]\n        return target",
          "compare_result": "111111111111111111111111111111111111111111111111111111111",
          "title_slug": "two-sum"
       },
       {
          "id": 594688568,
          "lang": "python",
          "time": "1 day, 4 hours",
          "timestamp": 1638236162,
          "status_display": "Accepted",
          "runtime": "3588 ms",
          "url": "/submissions/detail/594688568/",
          "is_pending": "Not Pending",
          "title": "Two Sum",
          "memory": "14.5 MB",
          "code": "class Solution(object):\n    def twoSum(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: List[int]\n        \"\"\"\n        for i in range(len(nums)):\n            for j in range(i+1, len(nums)):\n                if nums[i] + nums[j] == target:\n                    return [i, j]\n        return nums",
          "compare_result": "111111111111111111111111111111111111111111111111111111111",
          "title_slug": "two-sum"
       },
       {
          "id": 594688456,
          "lang": "python",
          "time": "1 day, 4 hours",
          "timestamp": 1638236141,
          "status_display": "Accepted",
          "runtime": "3704 ms",
          "url": "/submissions/detail/594688456/",
          "is_pending": "Not Pending",
          "title": "Two Sum",
          "memory": "14.4 MB",
          "code": "class Solution(object):\n    def twoSum(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: List[int]\n        \"\"\"\n        for i in range(len(nums)):\n            for j in range(i+1, len(nums)):\n                if nums[i] + nums[j] == target:\n                    return [i, j]\n        return nums",
          "compare_result": "111111111111111111111111111111111111111111111111111111111",
          "title_slug": "two-sum"
       },
       {
          "id": 594687641,
          "lang": "python",
          "time": "1 day, 4 hours",
          "timestamp": 1638235996,
          "status_display": "Accepted",
          "runtime": "3592 ms",
          "url": "/submissions/detail/594687641/",
          "is_pending": "Not Pending",
          "title": "Two Sum",
          "memory": "14.3 MB",
          "code": "class Solution(object):\n    def twoSum(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: List[int]\n        \"\"\"\n        for i in range(len(nums)):\n            for j in range(i+1, len(nums)):\n                if nums[i] + nums[j] == target:\n                    return [i, j]\n        return []\n        ",
          "compare_result": "111111111111111111111111111111111111111111111111111111111",
          "title_slug": "two-sum"
       },
       {
          "id": 590880923,
          "lang": "c",
          "time": "1 week, 1 day",
          "timestamp": 1637565600,
          "status_display": "Accepted",
          "runtime": "5 ms",
          "url": "/submissions/detail/590880923/",
          "is_pending": "Not Pending",
          "title": "Integer Break",
          "memory": "5.6 MB",
          "code": "/** https://leetcode.com/problems/integer-break/ */\n//Given an integer n, break it into the sum of k positive integers, where k >= 2, and maximize the product of those integers.\n//Return the maximum product you can get.\n\n\n\nint integerBreak(int n){\n    if(n == 2) return 1;\n    if(n == 3) return 2;\n    int res = 1;\n    while(n > 4){\n        res *= 3;\n        n -= 3;\n    }\n    res *= n;\n    return res;\n}\n    ",
          "compare_result": "11111111111111111111111111111111111111111111111111",
          "title_slug": "integer-break"
       },
       {
          "id": 590880431,
          "lang": "python",
          "time": "1 week, 1 day",
          "timestamp": 1637565525,
          "status_display": "Wrong Answer",
          "runtime": "N/A",
          "url": "/submissions/detail/590880431/",
          "is_pending": "Not Pending",
          "title": "Integer Break",
          "memory": "N/A",
          "code": "# https://leetcode.com/problems/integer-break/\n#Given an integer n, break it into the sum of k positive integers, where k >= 2, and maximize the product of those integers.\n#Return the maximum product you can get.\n\nclass Solution(object):\n    def integerBreak(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        if n == 2:\n            return 1\n        if n == 3:\n            return 2\n        if n == 4:\n            return 4\n        if n == 5:\n            return 6\n        if n == 6:\n            return 9\n        if n == 7:\n            return 12\n        if n == 8:\n            return 18\n        if n == 9:\n            return 27\n        if n == 10:\n            return 36\n        if n == 11:\n            return 54\n        if n == 12:\n            return 81\n        if n == 13:\n            return 108\n        if n == 14:\n            return 162\n        if n == 15:\n            return 243\n        if n == 16:\n            return 324\n        if n == 17:\n            return 486\n        if n == 18:\n            return 729\n        if n == 19:\n            return 987\n        if n == 20:\n            return 1260\n        if n == 21:\n            return 1716\n        if n == 22:\n            return 2369\n        if n == 23:\n            return 3276\n        if n == 24:\n            return 4423\n        if n == 25:\n            return 6188\n        if n == 26:\n            return 8748\n        if n == 27:\n            return 13122\n        if n == 28:\n            return 19699\n        if n == 29:\n            return 29304\n        if n == 30:\n            return 43243\n        if n == 31:\n            return 66280\n        if n == 32:\n            return 92378\n        if n == 33:\n            return 134596\n        if n == 34:\n            return 203552\n        if n == 35:\n            return 304224\n        if n == 36:\n            return 468178\n        if n == 37:\n            return 710586\n        if n == 38:\n            return 1094204\n        if n == 39:\n            return 1655801\n        if n == 40:\n            return 2437925\n        if n == 41:\n            return 3767620\n        if n == 42:\n            return 5852925\n        if n == 43:\n            return     \n    ",
          "compare_result": "11111111111111111000000000000000000000000000000000",
          "title_slug": "integer-break"
       },
       {
          "id": 590880344,
          "lang": "javascript",
          "time": "1 week, 1 day",
          "timestamp": 1637565513,
          "status_display": "Accepted",
          "runtime": "101 ms",
          "url": "/submissions/detail/590880344/",
          "is_pending": "Not Pending",
          "title": "Integer Break",
          "memory": "38.3 MB",
          "code": "/** https://leetcode.com/problems/integer-break/ */\n//Given an integer n, break it into the sum of k positive integers, where k >= 2, and maximize the product of those integers.\n//Return the maximum product you can get.\n\n/**\n * @param {number} n\n * @return {number}\n */\n var integerBreak = function(n) {\n         if (n === 2) {\n        return 1;\n    }\n    if (n === 3) {\n        return 2;\n    }\n    let result = 1;\n    while (n > 4) {\n        result *= 3;\n        n -= 3;\n    }\n    return result * n;\n};\n    ",
          "compare_result": "11111111111111111111111111111111111111111111111111",
          "title_slug": "integer-break"
       },
       {
          "id": 590615330,
          "lang": "java",
          "time": "1 week, 2 days",
          "timestamp": 1637523560,
          "status_display": "Accepted",
          "runtime": "2 ms",
          "url": "/submissions/detail/590615330/",
          "is_pending": "Not Pending",
          "title": "Ugly Number II",
          "memory": "37.8 MB",
          "code": "/** https://leetcode.com/problems/ugly-number-ii/ */\n\n/**\n * An ugly number is a positive integer whose prime factors are limited to 2, 3, and 5.\n * Given an integer n, return the nth ugly number.\n */\nclass Solution {\n    public int nthUglyNumber(int n) {\n        int[] dp = new int[n];\n        dp[0] = 1;\n        int i2 = 0, i3 = 0, i5 = 0;\n        for (int i = 1; i < n; i++) {\n            dp[i] = Math.min(dp[i2] * 2, Math.min(dp[i3] * 3, dp[i5] * 5));\n            if (dp[i] == dp[i2] * 2) i2++;\n            if (dp[i] == dp[i3] * 3) i3++;\n            if (dp[i] == dp[i5] * 5) i5++;\n        }\n        return dp[n - 1];\n    }\n}",
          "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
          "title_slug": "ugly-number-ii"
       },
       {
          "id": 590615233,
          "lang": "javascript",
          "time": "1 week, 2 days",
          "timestamp": 1637523542,
          "status_display": "Runtime Error",
          "runtime": "N/A",
          "url": "/submissions/detail/590615233/",
          "is_pending": "Not Pending",
          "title": "Ugly Number II",
          "memory": "N/A",
          "code": "/** https://leetcode.com/problems/ugly-number-ii/ */\n\n/**\n * An ugly number is a positive integer whose prime factors are limited to 2, 3, and 5.\n * Given an integer n, return the nth ugly number.\n */\nclass Solution {\n    public int nthUglyNumber(int n) {\n        int[] dp = new int[n];\n        dp[0] = 1;\n        int i2 = 0, i3 = 0, i5 = 0;\n        for (int i = 1; i < n; i++) {\n            dp[i] = Math.min(dp[i2] * 2, Math.min(dp[i3] * 3, dp[i5] * 5));\n            if (dp[i] == dp[i2] * 2) i2++;\n            if (dp[i] == dp[i3] * 3) i3++;\n            if (dp[i] == dp[i5] * 5) i5++;\n        }\n        return dp[n - 1];\n    }\n}",
          "compare_result
          "title_slug": "ugly-number-ii"
       },
       {
          "id": 581843788,
          "lang": "python",
          "time": "3 weeks, 6 days",
          "timestamp": 1636001742,
          "status_display": "Accepted",
          "runtime": "3492 ms",
          "url": "/submissions/detail/581843788/",
          "is_pending": "Not Pending",
          "title": "Two Sum",
          "memory": "14.3 MB",
          "code": "class Solution(object):\n    def twoSum(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: List[int]\n        \"\"\"\n        for i in range(len(nums)):\n            for j in range(i+1, len(nums)):\n                if nums[i] + nums[j] == target:\n                    return [i, j]\n        return []\n        ",
          "compare_result": "111111111111111111111111111111111111111111111111111111111",
          "title_slug": "two-sum"
       },
       {
          "id": 581843511,
          "lang": "python",
          "time": "3 weeks, 6 days",
          "timestamp": 1636001702,
          "status_display": "Accepted",
          "runtime": "3524 ms",
          "url": "/submissions/detail/581843511/",
          "is_pending": "Not Pending",
          "title": "Two Sum",
          "memory": "14.2 MB",
          "code": "class Solution(object):\n    def twoSum(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: List[int]\n        \"\"\"\n        for i in range(len(nums)):\n            for j in range(i+1, len(nums)):\n                if nums[i] + nums[j] == target:\n                    return [i, j]",
          "compare_result": "111111111111111111111111111111111111111111111111111111111",
          "title_slug": "two-sum"
       }
    ],
    "has_next": true,
    "last_key": "%7B%22pk%22%3A%20%7B%22N%22%3A%20%22581843511%22%7D%2C%20%22dt%22%3A%20%7B%22S%22%3A%20%222021-11-04T04%3A55%3A02.187780%2B0000%22%7D%2C%20%22sid%22%3A%20%7B%22N%22%3A%20%225508277%22%7D%7D"
 }